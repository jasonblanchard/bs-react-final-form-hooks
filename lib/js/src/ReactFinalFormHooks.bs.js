// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var ReactFinalFormHooks = require("react-final-form-hooks");

function formToJs(param) {
  return {
          batch: param[/* batch */0],
          blur: param[/* blur */1],
          change: param[/* change */2],
          focus: param[/* focus */3],
          getFieldState: param[/* getFieldState */4],
          getRegisteredFields: param[/* getRegisteredFields */5],
          getState: param[/* getState */6],
          initialize: param[/* initialize */7],
          isValidationPaused: param[/* isValidationPaused */8],
          mutators: param[/* mutators */9],
          pauseValidation: param[/* pauseValidation */10],
          registerField: param[/* registerField */11],
          reset: param[/* reset */12],
          resumeValidation: param[/* resumeValidation */13],
          setConfig: param[/* setConfig */14],
          submit: param[/* submit */15],
          subscribe: param[/* subscribe */16]
        };
}

function formFromJs(param) {
  return /* record */[
          /* batch */param.batch,
          /* blur */param.blur,
          /* change */param.change,
          /* focus */param.focus,
          /* getFieldState */param.getFieldState,
          /* getRegisteredFields */param.getRegisteredFields,
          /* getState */param.getState,
          /* initialize */param.initialize,
          /* isValidationPaused */param.isValidationPaused,
          /* mutators */param.mutators,
          /* pauseValidation */param.pauseValidation,
          /* registerField */param.registerField,
          /* reset */param.reset,
          /* resumeValidation */param.resumeValidation,
          /* setConfig */param.setConfig,
          /* submit */param.submit,
          /* subscribe */param.subscribe
        ];
}

function formRenderPropsToJs(param) {
  return {
          pristine: param[/* pristine */0],
          handleSubmit: param[/* handleSubmit */1],
          submitting: param[/* submitting */2],
          form: param[/* form */3],
          valid: param[/* valid */4]
        };
}

function formRenderPropsFromJs(param) {
  return /* record */[
          /* pristine */param.pristine,
          /* handleSubmit */param.handleSubmit,
          /* submitting */param.submitting,
          /* form */param.form,
          /* valid */param.valid
        ];
}

function useForm(onSubmit, validate, param) {
  var options = {
    onSubmit: onSubmit,
    validate: validate
  };
  var renderProps = ReactFinalFormHooks.useForm(options);
  return /* record */[
          /* pristine */renderProps.pristine,
          /* handleSubmit */renderProps.handleSubmit,
          /* submitting */renderProps.submitting,
          /* form */formFromJs(renderProps.form),
          /* valid */renderProps.valid
        ];
}

function fieldInputRenderPropsToJs(param) {
  return {
          name: param[/* name */0],
          value: param[/* value */1],
          onChange: param[/* onChange */2],
          onBlur: param[/* onBlur */3],
          onFocus: param[/* onFocus */4]
        };
}

function fieldInputRenderPropsFromJs(param) {
  return /* record */[
          /* name */param.name,
          /* value */param.value,
          /* onChange */param.onChange,
          /* onBlur */param.onBlur,
          /* onFocus */param.onFocus
        ];
}

function fieldMetaRenderPropsToJs(param) {
  return {
          touched: param[/* touched */0],
          valid: param[/* valid */1],
          error: param[/* error */2]
        };
}

function fieldMetaRenderPropsFromJs(param) {
  return /* record */[
          /* touched */param.touched,
          /* valid */param.valid,
          /* error */param.error
        ];
}

function useField(name, form, validate, param) {
  var renderProps = ReactFinalFormHooks.useField(name, formToJs(form), validate);
  return /* record */[
          /* input */fieldInputRenderPropsFromJs(renderProps.input),
          /* meta */fieldMetaRenderPropsFromJs(renderProps.meta)
        ];
}

exports.formToJs = formToJs;
exports.formFromJs = formFromJs;
exports.formRenderPropsToJs = formRenderPropsToJs;
exports.formRenderPropsFromJs = formRenderPropsFromJs;
exports.useForm = useForm;
exports.fieldInputRenderPropsToJs = fieldInputRenderPropsToJs;
exports.fieldInputRenderPropsFromJs = fieldInputRenderPropsFromJs;
exports.fieldMetaRenderPropsToJs = fieldMetaRenderPropsToJs;
exports.fieldMetaRenderPropsFromJs = fieldMetaRenderPropsFromJs;
exports.useField = useField;
/* react-final-form-hooks Not a pure module */
